{"version":3,"sources":["components/card/Card.jsx","components/card-list/CardList-Component.jsx","components/search-box/Search-box-component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","onChange","type","App","handleSearch","event","setState","searchField","target","value","state","a","fetch","response","json","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2VAIMA,EAAO,SAACC,GACV,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0B,GAAKF,EAAMG,QAAQC,GAA7C,0BAAyEC,IAAI,YACrF,6BAAKL,EAAMG,QAAQG,OACnB,6BAAKN,EAAMG,QAAQI,YCLzBC,G,MAAW,SAACR,GAEd,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAK,SAACP,GACpB,OACE,cAAC,EAAD,CAEEA,QAASA,GADJA,EAAQC,WCRzBO,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aAE7B,OACI,uBACAZ,UAAU,SACVa,SAAUD,EACVE,KAAK,SACLH,YAAaA,MC+CNI,E,kDAjDb,aAAe,IAAD,8BACZ,gBAcFC,aAAe,SAACC,GAGV,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAf9C,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IALH,E,4FASd,8BAAAI,EAAA,sEACyBC,MAAM,8CAD/B,cACQC,EADR,gBAEqBA,EAASC,OAF9B,OAEQA,EAFR,OAGEC,KAAKT,SAAS,CAACV,SAAUkB,IAH3B,gD,0EAYA,WAAS,IAAD,EAE2BC,KAAKL,MAA9Bd,EAFF,EAEEA,SAAUW,EAFZ,EAEYA,YACZS,EAAmBpB,EAASqB,QAAQ,SAAC3B,GACzC,OACEA,EAAQG,KAAKyB,cAAcC,SAASZ,EAAYW,kBAGpD,OACE,sBAAK9B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACAW,YAAY,sBACZC,aAAce,KAAKX,eAEnB,cAAC,EAAD,CACER,SAAUoB,W,GAvCFI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.758386b6.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card-style.css'\r\n\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className='card-container'>\r\n            <img src={`https://robohash.org/${30 + props.monster.id}?set=set2&size=180x180`} alt=\"monster\"  />\r\n            <h2>{props.monster.name}</h2>\r\n            <h3>{props.monster.email}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport {Card}","import React from 'react'\r\nimport { Card } from '../card/Card'\r\nimport './CardList-Style.css'\r\n\r\nconst CardList = (props) => {\r\n    ;\r\n    return (\r\n        <div className='card-list'>\r\n            {props.monsters.map( (monster) => {\r\n              return(\r\n                <Card \r\n                  key={monster.id}\r\n                  monster={monster}\r\n                />\r\n              )\r\n            }\r\n          )\r\n        }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport {CardList}","import React from 'react'\r\nimport './Search-box-style.css'\r\n\r\nconst SearchBox = ({placeholder, handleChange}) => {\r\n\r\n    return(\r\n        <input \r\n        className='search' \r\n        onChange={handleChange} \r\n        type='search' \r\n        placeholder={placeholder}\r\n        />\r\n    )\r\n}\r\n\r\nexport {SearchBox}","\nimport './App.css';\nimport React, { Component } from 'react'\nimport { CardList } from './components/card-list/CardList-Component';\nimport {SearchBox} from './components/search-box/Search-box-component'\n\nclass App extends Component {\n\n  constructor() {\n    super()\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  async componentDidMount()  {\n    const response = await fetch('https://jsonplaceholder.typicode.com/users')\n    const json = await response.json()\n    this.setState({monsters: json})\n  }\n\n  handleSearch = (event) => {\n        //console.log(event.target.value)\n    \n        this.setState({ searchField: event.target.value}) \n  }\n\n  render(){\n\n    const { monsters, searchField} = this.state\n    const filteredMonsters = monsters.filter( (monster) => {\n      return (\n        monster.name.toLowerCase().includes(searchField.toLowerCase())\n      ) \n    })\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <SearchBox \n        placeholder='Search for monsters'\n        handleChange={this.handleSearch}\n        />\n        <CardList\n          monsters={filteredMonsters}\n        />\n      </div>\n    );\n  }\n\n\n\n\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}